version: '3.7'

#Description: >
#  Basic system setup for storing and visualizing sensors data via MQTT
#  ESP8266+sensors (Temp, Humidity, Pressure)
#  Each containers data are stored in: ${VOLUMES_USER_DATA_BASE}[containername]_user_data
#  TODO: connect Bosch 4300W Boiler with ESP

#Comment: >
#  Used: Node-red, VSCode server, AppDaemon, MariaDB
#  Not used: Deconz

services:
  
  dps:
    image: defreitas/dns-proxy-server
    environment:
      - MG_REGISTER_CONTAINER_NAMES=1
    networks:
      - smarthome
    volumes:
      - ${VOLUMES_USER_DATA_BASE}dns_user_data:/var/run/docker.sock

  #MQTT Broker Mosquitto
  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ${VOLUMES_USER_DATA_BASE}mosquitto_user_data:/mosquitto/data
#      - mosquitto_volume:/mosquitto/data
    networks:
      smarthome:
        ipv4_address: 192.168.1.227
    domainname: docker.local
    hostname: mosquitto

  #NODE-RED
  node-red:
    image: nodered/node-red
    container_name: mynodered
    restart: always
    ports:
      - "1880:1880"
    volumes:
      - ${VOLUMES_USER_DATA_BASE}mynodered_user_data:/data
#      - mynodered_volume:/var/lib/nodered
    networks:
      - smarthome
    domainname: docker.local
    hostname: mynodered


  #InfluxDB store sensors data
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    restart: always
    ports:
      - "8083:8083"
      - "8086:8086"
      - "8090:8090"
    environment:
      - INFLUXDB_DB="${INFLUXDB_DB}"
      - INFLUXDB_USER="${INFLUXDB_USER}"
      - INFLUXDB_USER_PASSWORD="${INFLUXDB_USER_PASSWORD}"
      - INFLUXDB_ADMIN_USER="${INFLUXDB_ADMIN_USER}"
      - INFLUXDB_ADMIN_PASSWORD="${INFLUXDB_ADMIN_PASSWORD}"
    volumes:
      - ${VOLUMES_USER_DATA_BASE}influxdb_user_data:/var/lib/influxdb
      - ./config/influx-init.iql:/docker-entrypoint-initdb.d/
    networks:
      - smarthome


  #Telegraf gather sensors data via MQTT to send to InfluxDB
  telegraf:
    image: telegraf:latest
    container_name: telegraf
    restart: always
    links:
      - influxdb
    volumes:
      - ./config/telegraf.conf:/etc/telegraf/telegraf.conf
#      - telegraf_volume:/home
    depends_on: [influxdb]
    networks:
      - smarthome


  #Visualize sensors Influx data
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - influxdb
    depends_on:
      - influxdb
    volumes:
      - ${VOLUMES_USER_DATA_BASE}grafana_user_data:/var/lib/grafana
    networks:
      - smarthome


#volumes:
  #influxdb_volume: {}
  #grafana_volume: {}
  #mynodered_volume: {}
  #mosquitto_volume: {}
  #telegraf_volume: {}

  #docker network create -d bridge --subnet 192.168.1.0/24 --gateway 192.168.1.1 --ip-range 192.168.1.225/29 smarthome

networks:
  smarthome:
    external: true